// Code generated by mockigo. DO NOT EDIT.

package mockery

import match "github.com/iesen/mockigo/match"
import mock "github.com/iesen/mockigo/mock"
import mockery "github.com/iesen/mockigo/internal/fixtures/mockery"

var _ = match.Any[int]

type UsesOtherPkgIface struct {
	mock *mock.Mock
}

func NewUsesOtherPkgIface(t mock.Testing) *UsesOtherPkgIface {
	t.Helper()
	return &UsesOtherPkgIface{mock: mock.NewMock(t)}
}

type _UsesOtherPkgIface_Expecter struct {
	mock *mock.Mock
}

func (_mock *UsesOtherPkgIface) EXPECT() _UsesOtherPkgIface_Expecter {
	return _UsesOtherPkgIface_Expecter{mock: _mock.mock}
}

type _UsesOtherPkgIface_DoSomethingElse_Call struct {
	*mock.Call
}

func (_mock *UsesOtherPkgIface) DoSomethingElse(obj mockery.Sibling) {
	_mock.mock.T.Helper()
	_mock.mock.Called("DoSomethingElse", obj)
}

func (_expecter _UsesOtherPkgIface_Expecter) DoSomethingElse(obj match.Arg[mockery.Sibling]) _UsesOtherPkgIface_DoSomethingElse_Call {
	return _UsesOtherPkgIface_DoSomethingElse_Call{Call: _expecter.mock.ExpectCall("DoSomethingElse", obj.Arg)}
}

func (_call _UsesOtherPkgIface_DoSomethingElse_Call) Return() _UsesOtherPkgIface_DoSomethingElse_Call {
	_call.Call.Return()
	return _call
}

func (_call _UsesOtherPkgIface_DoSomethingElse_Call) RunReturn(f func(obj mockery.Sibling)) _UsesOtherPkgIface_DoSomethingElse_Call {
	_call.Call.RunReturn(f)
	return _call
}
