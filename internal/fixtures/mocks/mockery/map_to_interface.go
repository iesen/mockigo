// Code generated by mockigo. DO NOT EDIT.

package mockery

import match "github.com/iesen/mockigo/match"
import mock "github.com/iesen/mockigo/mock"

var _ = match.Any[int]

type MapToInterface struct {
	mock *mock.Mock
}

func NewMapToInterface(t mock.Testing) *MapToInterface {
	t.Helper()
	return &MapToInterface{mock: mock.NewMock(t)}
}

type _MapToInterface_Expecter struct {
	mock *mock.Mock
}

func (_mock *MapToInterface) EXPECT() _MapToInterface_Expecter {
	return _MapToInterface_Expecter{mock: _mock.mock}
}

type _MapToInterface_Foo_Call struct {
	*mock.Call
}

func (_mock *MapToInterface) Foo(arg1 ...map[string]interface{}) {
	_mock.mock.T.Helper()
	_args := []interface{}{}
	for _, _variadic := range arg1 {
		_args = append(_args, interface{}(_variadic))
	}
	_mock.mock.Called("Foo", _args...)
}

func (_expecter _MapToInterface_Expecter) Foo(arg1 ...match.Arg[map[string]interface{}]) _MapToInterface_Foo_Call {
	_args := append([]mock.Matcher{}, match.ArgsToMatchers(arg1)...)
	return _MapToInterface_Foo_Call{Call: _expecter.mock.ExpectCall("Foo", _args...)}
}

func (_call _MapToInterface_Foo_Call) Return() _MapToInterface_Foo_Call {
	_call.Call.Return()
	return _call
}

func (_call _MapToInterface_Foo_Call) RunReturn(f func(arg1 ...map[string]interface{})) _MapToInterface_Foo_Call {
	_call.Call.RunReturn(f)
	return _call
}
