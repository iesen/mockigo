// Code generated by mockigo. DO NOT EDIT.

package mockery

import io "io"
import match "github.com/iesen/mockigo/match"
import mock "github.com/iesen/mockigo/mock"

var _ = match.Any[int]

type RequesterVariadic struct {
	mock *mock.Mock
}

func NewRequesterVariadic(t mock.Testing) *RequesterVariadic {
	t.Helper()
	return &RequesterVariadic{mock: mock.NewMock(t)}
}

type _RequesterVariadic_Expecter struct {
	mock *mock.Mock
}

func (_mock *RequesterVariadic) EXPECT() _RequesterVariadic_Expecter {
	return _RequesterVariadic_Expecter{mock: _mock.mock}
}

type _RequesterVariadic_Get_Call struct {
	*mock.Call
}

func (_mock *RequesterVariadic) Get(values ...string) bool {
	_mock.mock.T.Helper()
	_args := []interface{}{}
	for _, _variadic := range values {
		_args = append(_args, interface{}(_variadic))
	}
	_results := _mock.mock.Called("Get", _args...)
	_r0 := _results.Get(0).(bool)
	return _r0
}

func (_expecter _RequesterVariadic_Expecter) Get(values ...match.Arg[string]) _RequesterVariadic_Get_Call {
	_args := append([]mock.Matcher{}, match.ArgsToMatchers(values)...)
	return _RequesterVariadic_Get_Call{Call: _expecter.mock.ExpectCall("Get", _args...)}
}

func (_call _RequesterVariadic_Get_Call) Return(_r0 bool) _RequesterVariadic_Get_Call {
	_call.Call.Return(_r0)
	return _call
}

func (_call _RequesterVariadic_Get_Call) RunReturn(f func(values ...string) bool) _RequesterVariadic_Get_Call {
	_call.Call.RunReturn(f)
	return _call
}

type _RequesterVariadic_MultiWriteToFile_Call struct {
	*mock.Call
}

func (_mock *RequesterVariadic) MultiWriteToFile(filename string, w ...io.Writer) string {
	_mock.mock.T.Helper()
	_args := []interface{}{filename}
	for _, _variadic := range w {
		_args = append(_args, interface{}(_variadic))
	}
	_results := _mock.mock.Called("MultiWriteToFile", _args...)
	_r0 := _results.Get(0).(string)
	return _r0
}

func (_expecter _RequesterVariadic_Expecter) MultiWriteToFile(filename match.Arg[string], w ...match.Arg[io.Writer]) _RequesterVariadic_MultiWriteToFile_Call {
	_args := append([]mock.Matcher{filename.Arg}, match.ArgsToMatchers(w)...)
	return _RequesterVariadic_MultiWriteToFile_Call{Call: _expecter.mock.ExpectCall("MultiWriteToFile", _args...)}
}

func (_call _RequesterVariadic_MultiWriteToFile_Call) Return(_r0 string) _RequesterVariadic_MultiWriteToFile_Call {
	_call.Call.Return(_r0)
	return _call
}

func (_call _RequesterVariadic_MultiWriteToFile_Call) RunReturn(f func(filename string, w ...io.Writer) string) _RequesterVariadic_MultiWriteToFile_Call {
	_call.Call.RunReturn(f)
	return _call
}

type _RequesterVariadic_OneInterface_Call struct {
	*mock.Call
}

func (_mock *RequesterVariadic) OneInterface(a ...interface{}) bool {
	_mock.mock.T.Helper()
	_args := []interface{}{}
	for _, _variadic := range a {
		_args = append(_args, interface{}(_variadic))
	}
	_results := _mock.mock.Called("OneInterface", _args...)
	_r0 := _results.Get(0).(bool)
	return _r0
}

func (_expecter _RequesterVariadic_Expecter) OneInterface(a ...match.Arg[interface{}]) _RequesterVariadic_OneInterface_Call {
	_args := append([]mock.Matcher{}, match.ArgsToMatchers(a)...)
	return _RequesterVariadic_OneInterface_Call{Call: _expecter.mock.ExpectCall("OneInterface", _args...)}
}

func (_call _RequesterVariadic_OneInterface_Call) Return(_r0 bool) _RequesterVariadic_OneInterface_Call {
	_call.Call.Return(_r0)
	return _call
}

func (_call _RequesterVariadic_OneInterface_Call) RunReturn(f func(a ...interface{}) bool) _RequesterVariadic_OneInterface_Call {
	_call.Call.RunReturn(f)
	return _call
}

type _RequesterVariadic_Sprintf_Call struct {
	*mock.Call
}

func (_mock *RequesterVariadic) Sprintf(format string, a ...interface{}) string {
	_mock.mock.T.Helper()
	_args := []interface{}{format}
	for _, _variadic := range a {
		_args = append(_args, interface{}(_variadic))
	}
	_results := _mock.mock.Called("Sprintf", _args...)
	_r0 := _results.Get(0).(string)
	return _r0
}

func (_expecter _RequesterVariadic_Expecter) Sprintf(format match.Arg[string], a ...match.Arg[interface{}]) _RequesterVariadic_Sprintf_Call {
	_args := append([]mock.Matcher{format.Arg}, match.ArgsToMatchers(a)...)
	return _RequesterVariadic_Sprintf_Call{Call: _expecter.mock.ExpectCall("Sprintf", _args...)}
}

func (_call _RequesterVariadic_Sprintf_Call) Return(_r0 string) _RequesterVariadic_Sprintf_Call {
	_call.Call.Return(_r0)
	return _call
}

func (_call _RequesterVariadic_Sprintf_Call) RunReturn(f func(format string, a ...interface{}) string) _RequesterVariadic_Sprintf_Call {
	_call.Call.RunReturn(f)
	return _call
}
