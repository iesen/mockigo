// Code generated by mockigo. DO NOT EDIT.

package context

import context "context"
import match "github.com/iesen/mockigo/match"
import mock "github.com/iesen/mockigo/mock"

var _ = match.Any[int]

type CollideWithStdLib struct {
	mock *mock.Mock
}

func NewCollideWithStdLib(t mock.Testing) *CollideWithStdLib {
	t.Helper()
	return &CollideWithStdLib{mock: mock.NewMock(t)}
}

type _CollideWithStdLib_Expecter struct {
	mock *mock.Mock
}

func (_mock *CollideWithStdLib) EXPECT() _CollideWithStdLib_Expecter {
	return _CollideWithStdLib_Expecter{mock: _mock.mock}
}

type _CollideWithStdLib_NewClient_Call struct {
	*mock.Call
}

func (_mock *CollideWithStdLib) NewClient(ctx context.Context) {
	_mock.mock.T.Helper()
	_mock.mock.Called("NewClient", ctx)
}

func (_expecter _CollideWithStdLib_Expecter) NewClient(ctx match.Arg[context.Context]) _CollideWithStdLib_NewClient_Call {
	return _CollideWithStdLib_NewClient_Call{Call: _expecter.mock.ExpectCall("NewClient", ctx.Arg)}
}

func (_call _CollideWithStdLib_NewClient_Call) Return() _CollideWithStdLib_NewClient_Call {
	_call.Call.Return()
	return _call
}

func (_call _CollideWithStdLib_NewClient_Call) RunReturn(f func(ctx context.Context)) _CollideWithStdLib_NewClient_Call {
	_call.Call.RunReturn(f)
	return _call
}
