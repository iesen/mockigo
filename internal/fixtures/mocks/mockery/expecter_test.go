// Code generated by mockigo. DO NOT EDIT.

package mockery

import match "github.com/iesen/mockigo/match"
import mock "github.com/iesen/mockigo/mock"

var _ = match.Any[int]

type ExpecterTest struct {
	mock *mock.Mock
}

func NewExpecterTest(t mock.Testing) *ExpecterTest {
	t.Helper()
	return &ExpecterTest{mock: mock.NewMock(t)}
}

type _ExpecterTest_Expecter struct {
	mock *mock.Mock
}

func (_mock *ExpecterTest) EXPECT() _ExpecterTest_Expecter {
	return _ExpecterTest_Expecter{mock: _mock.mock}
}

type _ExpecterTest_ManyArgsReturns_Call struct {
	*mock.Call
}

func (_mock *ExpecterTest) ManyArgsReturns(str string, i int) (strs []string, err error) {
	_mock.mock.T.Helper()
	_results := _mock.mock.Called("ManyArgsReturns", str, i)
	var _r0 []string
	if _got := _results.Get(0); _got != nil {
		_r0 = _got.([]string)
	}
	_r1 := _results.Error(1)
	return _r0, _r1
}

func (_expecter _ExpecterTest_Expecter) ManyArgsReturns(str match.Arg[string], i match.Arg[int]) _ExpecterTest_ManyArgsReturns_Call {
	return _ExpecterTest_ManyArgsReturns_Call{Call: _expecter.mock.ExpectCall("ManyArgsReturns", str.Arg, i.Arg)}
}

func (_call _ExpecterTest_ManyArgsReturns_Call) Return(strs []string, err error) _ExpecterTest_ManyArgsReturns_Call {
	_call.Call.Return(strs, err)
	return _call
}

func (_call _ExpecterTest_ManyArgsReturns_Call) RunReturn(f func(str string, i int) (strs []string, err error)) _ExpecterTest_ManyArgsReturns_Call {
	_call.Call.RunReturn(f)
	return _call
}

type _ExpecterTest_NoArg_Call struct {
	*mock.Call
}

func (_mock *ExpecterTest) NoArg() string {
	_mock.mock.T.Helper()
	_results := _mock.mock.Called("NoArg")
	_r0 := _results.Get(0).(string)
	return _r0
}

func (_expecter _ExpecterTest_Expecter) NoArg() _ExpecterTest_NoArg_Call {
	return _ExpecterTest_NoArg_Call{Call: _expecter.mock.ExpectCall("NoArg")}
}

func (_call _ExpecterTest_NoArg_Call) Return(_r0 string) _ExpecterTest_NoArg_Call {
	_call.Call.Return(_r0)
	return _call
}

func (_call _ExpecterTest_NoArg_Call) RunReturn(f func() string) _ExpecterTest_NoArg_Call {
	_call.Call.RunReturn(f)
	return _call
}

type _ExpecterTest_NoReturn_Call struct {
	*mock.Call
}

func (_mock *ExpecterTest) NoReturn(str string) {
	_mock.mock.T.Helper()
	_mock.mock.Called("NoReturn", str)
}

func (_expecter _ExpecterTest_Expecter) NoReturn(str match.Arg[string]) _ExpecterTest_NoReturn_Call {
	return _ExpecterTest_NoReturn_Call{Call: _expecter.mock.ExpectCall("NoReturn", str.Arg)}
}

func (_call _ExpecterTest_NoReturn_Call) Return() _ExpecterTest_NoReturn_Call {
	_call.Call.Return()
	return _call
}

func (_call _ExpecterTest_NoReturn_Call) RunReturn(f func(str string)) _ExpecterTest_NoReturn_Call {
	_call.Call.RunReturn(f)
	return _call
}

type _ExpecterTest_Variadic_Call struct {
	*mock.Call
}

func (_mock *ExpecterTest) Variadic(ints ...int) error {
	_mock.mock.T.Helper()
	_args := []interface{}{}
	for _, _variadic := range ints {
		_args = append(_args, interface{}(_variadic))
	}
	_results := _mock.mock.Called("Variadic", _args...)
	_r0 := _results.Error(0)
	return _r0
}

func (_expecter _ExpecterTest_Expecter) Variadic(ints ...match.Arg[int]) _ExpecterTest_Variadic_Call {
	_args := append([]mock.Matcher{}, match.ArgsToMatchers(ints)...)
	return _ExpecterTest_Variadic_Call{Call: _expecter.mock.ExpectCall("Variadic", _args...)}
}

func (_call _ExpecterTest_Variadic_Call) Return(_r0 error) _ExpecterTest_Variadic_Call {
	_call.Call.Return(_r0)
	return _call
}

func (_call _ExpecterTest_Variadic_Call) RunReturn(f func(ints ...int) error) _ExpecterTest_Variadic_Call {
	_call.Call.RunReturn(f)
	return _call
}

type _ExpecterTest_VariadicMany_Call struct {
	*mock.Call
}

func (_mock *ExpecterTest) VariadicMany(i int, a string, intfs ...interface{}) error {
	_mock.mock.T.Helper()
	_args := []interface{}{i, a}
	for _, _variadic := range intfs {
		_args = append(_args, interface{}(_variadic))
	}
	_results := _mock.mock.Called("VariadicMany", _args...)
	_r0 := _results.Error(0)
	return _r0
}

func (_expecter _ExpecterTest_Expecter) VariadicMany(i match.Arg[int], a match.Arg[string], intfs ...match.Arg[interface{}]) _ExpecterTest_VariadicMany_Call {
	_args := append([]mock.Matcher{i.Arg, a.Arg}, match.ArgsToMatchers(intfs)...)
	return _ExpecterTest_VariadicMany_Call{Call: _expecter.mock.ExpectCall("VariadicMany", _args...)}
}

func (_call _ExpecterTest_VariadicMany_Call) Return(_r0 error) _ExpecterTest_VariadicMany_Call {
	_call.Call.Return(_r0)
	return _call
}

func (_call _ExpecterTest_VariadicMany_Call) RunReturn(f func(i int, a string, intfs ...interface{}) error) _ExpecterTest_VariadicMany_Call {
	_call.Call.RunReturn(f)
	return _call
}
