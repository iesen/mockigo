// Code generated by mockigo. DO NOT EDIT.

package mockery

import match "github.com/iesen/mockigo/match"
import mock "github.com/iesen/mockigo/mock"
import unsafe "unsafe"

var _ = match.Any[int]

type UnsafeInterface struct {
	mock *mock.Mock
}

func NewUnsafeInterface(t mock.Testing) *UnsafeInterface {
	t.Helper()
	return &UnsafeInterface{mock: mock.NewMock(t)}
}

type _UnsafeInterface_Expecter struct {
	mock *mock.Mock
}

func (_mock *UnsafeInterface) EXPECT() _UnsafeInterface_Expecter {
	return _UnsafeInterface_Expecter{mock: _mock.mock}
}

type _UnsafeInterface_Do_Call struct {
	*mock.Call
}

func (_mock *UnsafeInterface) Do(ptr *unsafe.Pointer) {
	_mock.mock.T.Helper()
	_mock.mock.Called("Do", ptr)
}

func (_expecter _UnsafeInterface_Expecter) Do(ptr match.Arg[*unsafe.Pointer]) _UnsafeInterface_Do_Call {
	return _UnsafeInterface_Do_Call{Call: _expecter.mock.ExpectCall("Do", ptr.Arg)}
}

func (_call _UnsafeInterface_Do_Call) Return() _UnsafeInterface_Do_Call {
	_call.Call.Return()
	return _call
}

func (_call _UnsafeInterface_Do_Call) RunReturn(f func(ptr *unsafe.Pointer)) _UnsafeInterface_Do_Call {
	_call.Call.RunReturn(f)
	return _call
}
