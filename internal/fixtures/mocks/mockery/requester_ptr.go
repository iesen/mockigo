// Code generated by mockigo. DO NOT EDIT.

package mockery

import match "github.com/iesen/mockigo/match"
import mock "github.com/iesen/mockigo/mock"

var _ = match.Any[int]

type RequesterPtr struct {
	mock *mock.Mock
}

func NewRequesterPtr(t mock.Testing) *RequesterPtr {
	t.Helper()
	return &RequesterPtr{mock: mock.NewMock(t)}
}

type _RequesterPtr_Expecter struct {
	mock *mock.Mock
}

func (_mock *RequesterPtr) EXPECT() _RequesterPtr_Expecter {
	return _RequesterPtr_Expecter{mock: _mock.mock}
}

type _RequesterPtr_Get_Call struct {
	*mock.Call
}

func (_mock *RequesterPtr) Get(path string) (*string, error) {
	_mock.mock.T.Helper()
	_results := _mock.mock.Called("Get", path)
	var _r0 *string
	if _got := _results.Get(0); _got != nil {
		_r0 = _got.(*string)
	}
	_r1 := _results.Error(1)
	return _r0, _r1
}

func (_expecter _RequesterPtr_Expecter) Get(path match.Arg[string]) _RequesterPtr_Get_Call {
	return _RequesterPtr_Get_Call{Call: _expecter.mock.ExpectCall("Get", path.Arg)}
}

func (_call _RequesterPtr_Get_Call) Return(_r0 *string, _r1 error) _RequesterPtr_Get_Call {
	_call.Call.Return(_r0, _r1)
	return _call
}

func (_call _RequesterPtr_Get_Call) RunReturn(f func(path string) (*string, error)) _RequesterPtr_Get_Call {
	_call.Call.RunReturn(f)
	return _call
}
