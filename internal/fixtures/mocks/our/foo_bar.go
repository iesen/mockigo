// Code generated by mockigo. DO NOT EDIT.

package fixtures

import match "github.com/iesen/mockigo/match"
import mock "github.com/iesen/mockigo/mock"
import time "time"

var _ = match.Any[int]

type FooBar struct {
	mock *mock.Mock
}

func NewFooBar(t mock.Testing) *FooBar {
	t.Helper()
	return &FooBar{mock: mock.NewMock(t)}
}

type _FooBar_Expecter struct {
	mock *mock.Mock
}

func (_mock *FooBar) EXPECT() _FooBar_Expecter {
	return _FooBar_Expecter{mock: _mock.mock}
}

type _FooBar_Bar_Call struct {
	*mock.Call
}

func (_mock *FooBar) Bar(t time.Duration) {
	_mock.mock.T.Helper()
	_mock.mock.Called("Bar", t)
}

func (_expecter _FooBar_Expecter) Bar(t match.Arg[time.Duration]) _FooBar_Bar_Call {
	return _FooBar_Bar_Call{Call: _expecter.mock.ExpectCall("Bar", t.Arg)}
}

func (_call _FooBar_Bar_Call) Return() _FooBar_Bar_Call {
	_call.Call.Return()
	return _call
}

func (_call _FooBar_Bar_Call) RunReturn(f func(t time.Duration)) _FooBar_Bar_Call {
	_call.Call.RunReturn(f)
	return _call
}

type _FooBar_Foo_Call struct {
	*mock.Call
}

func (_mock *FooBar) Foo(a int) int {
	_mock.mock.T.Helper()
	_results := _mock.mock.Called("Foo", a)
	_r0 := _results.Get(0).(int)
	return _r0
}

func (_expecter _FooBar_Expecter) Foo(a match.Arg[int]) _FooBar_Foo_Call {
	return _FooBar_Foo_Call{Call: _expecter.mock.ExpectCall("Foo", a.Arg)}
}

func (_call _FooBar_Foo_Call) Return(_r0 int) _FooBar_Foo_Call {
	_call.Call.Return(_r0)
	return _call
}

func (_call _FooBar_Foo_Call) RunReturn(f func(a int) int) _FooBar_Foo_Call {
	_call.Call.RunReturn(f)
	return _call
}
