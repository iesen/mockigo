// Code generated by mockigo. DO NOT EDIT.

package fixtures

import match "github.com/iesen/mockigo/match"
import mock "github.com/iesen/mockigo/mock"

var _ = match.Any[int]

type SimpleInterface struct {
	mock *mock.Mock
}

func NewSimpleInterface(t mock.Testing) *SimpleInterface {
	t.Helper()
	return &SimpleInterface{mock: mock.NewMock(t)}
}

type _SimpleInterface_Expecter struct {
	mock *mock.Mock
}

func (_mock *SimpleInterface) EXPECT() _SimpleInterface_Expecter {
	return _SimpleInterface_Expecter{mock: _mock.mock}
}

type _SimpleInterface_Bar_Call struct {
	*mock.Call
}

func (_mock *SimpleInterface) Bar(i int) int {
	_mock.mock.T.Helper()
	_results := _mock.mock.Called("Bar", i)
	_r0 := _results.Get(0).(int)
	return _r0
}

func (_expecter _SimpleInterface_Expecter) Bar(i match.Arg[int]) _SimpleInterface_Bar_Call {
	return _SimpleInterface_Bar_Call{Call: _expecter.mock.ExpectCall("Bar", i.Arg)}
}

func (_call _SimpleInterface_Bar_Call) Return(_r0 int) _SimpleInterface_Bar_Call {
	_call.Call.Return(_r0)
	return _call
}

func (_call _SimpleInterface_Bar_Call) RunReturn(f func(i int) int) _SimpleInterface_Bar_Call {
	_call.Call.RunReturn(f)
	return _call
}
