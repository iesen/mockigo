// Code generated by mockigo. DO NOT EDIT.

package fixtures

import match "github.com/iesen/mockigo/match"
import mock "github.com/iesen/mockigo/mock"

var _ = match.Any[int]

type BarFoo struct {
	mock *mock.Mock
}

func NewBarFoo(t mock.Testing) *BarFoo {
	t.Helper()
	return &BarFoo{mock: mock.NewMock(t)}
}

type _BarFoo_Expecter struct {
	mock *mock.Mock
}

func (_mock *BarFoo) EXPECT() _BarFoo_Expecter {
	return _BarFoo_Expecter{mock: _mock.mock}
}

type _BarFoo_Bar_Call struct {
	*mock.Call
}

func (_mock *BarFoo) Bar(_a0 int) string {
	_mock.mock.T.Helper()
	_results := _mock.mock.Called("Bar", _a0)
	_r0 := _results.Get(0).(string)
	return _r0
}

func (_expecter _BarFoo_Expecter) Bar(_a0 match.Arg[int]) _BarFoo_Bar_Call {
	return _BarFoo_Bar_Call{Call: _expecter.mock.ExpectCall("Bar", _a0.Arg)}
}

func (_call _BarFoo_Bar_Call) Return(_r0 string) _BarFoo_Bar_Call {
	_call.Call.Return(_r0)
	return _call
}

func (_call _BarFoo_Bar_Call) RunReturn(f func(int) string) _BarFoo_Bar_Call {
	_call.Call.RunReturn(f)
	return _call
}

type _BarFoo_Foo_Call struct {
	*mock.Call
}

func (_mock *BarFoo) Foo(_a0 int, _a1 string) int {
	_mock.mock.T.Helper()
	_results := _mock.mock.Called("Foo", _a0, _a1)
	_r0 := _results.Get(0).(int)
	return _r0
}

func (_expecter _BarFoo_Expecter) Foo(_a0 match.Arg[int], _a1 match.Arg[string]) _BarFoo_Foo_Call {
	return _BarFoo_Foo_Call{Call: _expecter.mock.ExpectCall("Foo", _a0.Arg, _a1.Arg)}
}

func (_call _BarFoo_Foo_Call) Return(_r0 int) _BarFoo_Foo_Call {
	_call.Call.Return(_r0)
	return _call
}

func (_call _BarFoo_Foo_Call) RunReturn(f func(int, string) int) _BarFoo_Foo_Call {
	_call.Call.RunReturn(f)
	return _call
}
