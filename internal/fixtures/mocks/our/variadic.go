// Code generated by mockigo. DO NOT EDIT.

package fixtures

import match "github.com/iesen/mockigo/match"
import mock "github.com/iesen/mockigo/mock"

var _ = match.Any[int]

type Variadic struct {
	mock *mock.Mock
}

func NewVariadic(t mock.Testing) *Variadic {
	t.Helper()
	return &Variadic{mock: mock.NewMock(t)}
}

type _Variadic_Expecter struct {
	mock *mock.Mock
}

func (_mock *Variadic) EXPECT() _Variadic_Expecter {
	return _Variadic_Expecter{mock: _mock.mock}
}

type _Variadic_SomeMethod_Call struct {
	*mock.Call
}

func (_mock *Variadic) SomeMethod(a int, b ...string) bool {
	_mock.mock.T.Helper()
	_args := []interface{}{a}
	for _, _variadic := range b {
		_args = append(_args, interface{}(_variadic))
	}
	_results := _mock.mock.Called("SomeMethod", _args...)
	_r0 := _results.Get(0).(bool)
	return _r0
}

func (_expecter _Variadic_Expecter) SomeMethod(a match.Arg[int], b ...match.Arg[string]) _Variadic_SomeMethod_Call {
	_args := append([]mock.Matcher{a.Arg}, match.ArgsToMatchers(b)...)
	return _Variadic_SomeMethod_Call{Call: _expecter.mock.ExpectCall("SomeMethod", _args...)}
}

func (_call _Variadic_SomeMethod_Call) Return(_r0 bool) _Variadic_SomeMethod_Call {
	_call.Call.Return(_r0)
	return _call
}

func (_call _Variadic_SomeMethod_Call) RunReturn(f func(a int, b ...string) bool) _Variadic_SomeMethod_Call {
	_call.Call.RunReturn(f)
	return _call
}
